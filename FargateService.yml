AWSTemplateFormatVersion: 2010-09-09
Description: The CloudFormation template for the Fargate ECS Servce.

Parameters:
  Stage:
    Type: String
  ContainerPort:
    Type: Number
  ImageURI:
    Type: String
  AppName:
    Type: String

Resources:

  # Create a TaskDefinition with container details
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      Memory: 1024
      Cpu: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - 'FARGATE'
      TaskRoleArn: !ImportValue EcsTaskExecutionRole
      ExecutionRoleArn: !ImportValue EcsTaskExecutionRole
      ContainerDefinitions:
        - Name: !Join ['-', [!Ref Stage, !Ref 'AWS::AccountId', !Ref AppName]]
          Image: !Ref ImageURI
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              HostPort: !Ref ContainerPort

  # Creat a security group for Containers and open in bound Container port from Load balancer security group to the Container 
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['-', [!Ref Stage, !Ref 'AWS::AccountId', !Ref AppName,'ContainerSecurityGroup']]
      GroupDescription: !Join ['-', [!Ref Stage, !Ref 'AWS::AccountId', 'ContainerSecurityGroup']]
      VpcId: !ImportValue ClusterVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          SourceSecurityGroupId: !ImportValue LoadBalancerSecurityGroup

  # Create a TargetGroup for HTTP port 80
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-', [!Ref Stage,!Ref AppName, 'TargetGroup']]
      Matcher:
        HttpCode: 404
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId: !ImportValue ClusterVPC

# Application Load Balancer listener.This could use to microservice load-balancing
  ListenerRule1:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Sub '/${AppName}/*'
      ListenerArn: !ImportValue LoadBalancerListener
      Priority: 1

  # Create an ECS Service and add created Cluster, TaskDefintion, Subnets, TargetGroup and SecurityGroup
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Join ['-', [!Ref Stage, !Ref 'AWS::AccountId', !Ref AppName]]
      Cluster: !ImportValue ECSCluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue SubnetA
            - !ImportValue SubnetB
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: !Join ['-', [!Ref Stage, !Ref 'AWS::AccountId', !Ref AppName]]
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup
